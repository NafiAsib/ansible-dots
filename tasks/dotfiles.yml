# - debug: var=home_dir
# - debug: var=user_id
# - debug: var=dotfiles_dir

- name: get dotfiles repo
  git:
    repo: https://github.com/NafiAsib/dotfiles.git
    dest: "{{ dotfiles_dir }}"

- name: check .config dir status 
  stat: path=/$HOME/.config
  register: configdir

- name: create .config if doesn't exist
  file:
    path: "{{ home_dir }}/.config"
    state: directory
  when: not configdir.stat.exists

- name: check .cache/zsh dir status
  stat: path=/$HOME/.cache/zsh
  register: zshcache

- name: create .cache/zsh dir
  file:
    path: "{{ home_dir }}/.cache/zsh"
    state: directory
  when: not zshcache.stat.exists

- name: create .config/zsh/ dir
  file: 
    path: "{{ home_dir }}/.config/zsh"
    state: directory

- name: symlink .zshrc
  file:
    src: "{{ dotfiles_dir }}/.zshrc"
    dest: "{{ home_dir }}/.zshrc"
    state: link

- name: symlink .config/zsh/git.zsh
  file:
    src: "{{ dotfiles_dir }}/.config/zsh/git.zsh"
    dest: "{{ home_dir }}/.config/zsh/git.zsh"
    state: link

- name: symlink .config/zsh/prompt.zsh-theme
  file:
    src: "{{ dotfiles_dir }}/.config/zsh/prompt.zsh-theme"
    dest: "{{ home_dir }}/.config/zsh/prompt.zsh-theme"
    state: link

- name: create nvim dir
  file:
    path: "{{ home_dir }}/.config/nvim"
    state: directory

- name: symlink init.vim
  file:
    src: "{{ dotfiles_dir }}/.config/nvim/init.vim"
    dest: "{{ home_dir }}/.config/nvim/init.vim"
    state: link

- name: install nvim plugins
  command: nvim --headless +PlugInstall +qall

- name: symlink tmux.conf
  file:
    src: "{{ home_dir }}/dotfiles/.tmux.conf"
    dest: "{{ home_dir }}/.tmux.conf"
    owner: "{{ user_id }}"
    group: "{{ user_id }}"
    state: link
    
- name: symlink .gitconfig
  file:
    src: "{{ home_dir }}/dotfiles/.gitconfig"
    dest: "{{ home_dir }}/.gitconfig"
    owner: "{{ user_id }}"
    group: "{{ user_id }}"
    state: link
  
- name: symlink global .gitignore
  file:
    src: "{{ home_dir }}/dotfiles/.gitignore"
    dest: "{{ home_dir }}/.gitignore"
    owner: "{{ user_id }}"
    group: "{{ user_id }}"
    state: link

- name: get spaceship repo
  git:
    repo: https://github.com/spaceship-prompt/spaceship-prompt.git
    dest: "{{ home_dir }}/.config/zsh/spaceship-prompt"
    
- name: check zsh/site-functions dir
  stat: path=/usr/local/share/zsh/site-functions
  register: sitefndir
   
- name: create site-funcitons directory
  file:
    path: /usr/local/share/zsh/site-functions
    state: directory
  when: not sitefndir.stat.exists
 
- name: symlink spaceship prompt
  become: yes
  file:
    src: "{{ home_dir }}/.config/zsh/spaceship-prompt/spaceship.zsh"
    dest: /usr/local/share/zsh/site-functions/prompt_spaceship_setup
    state: link
    
- name: get zsh-autosuggesions
  git:
    repo: https://github.com/zsh-users/zsh-autosuggestions.git
    dest: "{{ home_dir }}/.config/zsh/zsh-autosuggestions"
    
- name: get zsh-syntax-highlighting
  git:
    repo: https://github.com/zsh-users/zsh-syntax-highlighting.git
    dest: "{{ home_dir }}/.config/zsh/zsh-syntax-highlighting"
#- name: install spaceship
#  become: yes
#  become_user: "{{ user_id }}"
#  npm:
#    name: "spaceship-prompt"
#    global: yes
#    state: present
# - name: check for zsh-syntax-highlighting
#   stat: path=/$HOME/zsh-syntax-highlighting
#   register: zshsyntax
# 
# - name: clone zsh-syntax-highlighting
#   git:
#     repo: https://github.com/zsh-users/zsh-syntax-highlighting.git
#     dest: "{{ home_dir }}/zsh-syntax-highlighting"
#   when: not zshsyntax.stat.exists
#
# - name: install sharship.rs
#   become: true
#   shell: sh -c "$(curl -fsSL https://starship.rs/install.sh)" -y
# - name: print hostname
#   become: false
#   debug: msg="{{ home_dir }}"
